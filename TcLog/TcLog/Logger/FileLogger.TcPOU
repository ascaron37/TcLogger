<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="FileLogger" Id="{eddd5bf2-9f8b-4014-b1a1-2b9514f6af17}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FileLogger IMPLEMENTS EventLogger
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
  _path: STRING(255);
  file: TcExt.FileMemory := (mode_write := Tc2_System.FOPEN_MODEAPPEND OR Tc2_System.FOPEN_MODETEXT);
  localtime: FB_LocalSystemTime := (bEnable:=TRUE);
  _done: BOOL;
  _level: EventLevel;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="get_timestamped_path" Id="{fd365ee7-137c-43d5-b097-a6c91d56c64b}">
      <Declaration><![CDATA[METHOD PRIVATE get_timestamped_path : STRING(255)
VAR
  datetime: STRING(255);
  char_at: INT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[datetime := SYSTEMTIME_TO_STRING(localtime.systemTime);

char_at := FIND(datetime, '.');
IF char_at <> 0 THEN
  datetime := DELETE(datetime, 4, char_at);
END_IF

REPEAT
  char_at := FIND(datetime, ':');
  IF char_at <> 0 THEN
    datetime := REPLACE(datetime, '_', 1, char_at);
  END_IF
UNTIL char_at = 0
END_REPEAT

get_timestamped_path := CONCAT(path, CONCAT('log_', CONCAT(datetime, '.csv')));]]></ST>
      </Implementation>
    </Method>
    <Property Name="level" Id="{ab6b9969-76e1-4879-b617-99481726f092}">
      <Declaration><![CDATA[PROPERTY PUBLIC level : EventLevel]]></Declaration>
      <Get Name="Get" Id="{5ab1af13-9930-49f3-9811-710132aa1fb1}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[level := _level;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{cf7d265b-a08f-46d3-959d-33b6de9e6222}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_level := level;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="path" Id="{8ad77a76-a7ae-4211-a029-62cbfb7f3a1a}">
      <Declaration><![CDATA[PROPERTY path : STRING(255)]]></Declaration>
      <Get Name="Get" Id="{32fab473-3ae0-4d2e-b9ac-c6915164202f}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[path := _path;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{b4db1cae-d219-49b1-923d-846a377b7031}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_path := path;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="run" Id="{90c25d9f-9ec4-40ba-a160-c50bc84f515f}">
      <Declaration><![CDATA[METHOD run
VAR_INPUT
  act_time: TIMESTRUCT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="save" Id="{501c7d54-f5c2-48f2-862f-f63db1339f45}">
      <Declaration><![CDATA[METHOD save
VAR_INPUT
  execute: BOOL;
  data_ptr: PVOID;
  data_size: DWORD;
END_VAR
VAR_INST
  r_execute: R_TRIG;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[localtime();
r_execute(CLK:=execute);

IF r_execute.Q THEN
  file.path := get_timestamped_path();
END_IF
file.write(
  start:=execute,
  data_ptr:=data_ptr,
  data_size:=data_size,
  done=>_done,
  error_id=>);]]></ST>
      </Implementation>
    </Method>
    <Method Name="submit_event_message" Id="{4532367b-994f-48dd-829f-58c767e7db29}">
      <Declaration><![CDATA[METHOD submit_event_message
VAR_INPUT
	ev: EventMessage;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>