<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="TestEvent" Id="{1f6f0448-1ae3-4068-b11e-400de0fbbc2c}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK TestEvent EXTENDS TcUnit.FB_TestSuite
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[event_erstellen();
file_logger_testen();]]></ST>
    </Implementation>
    <Method Name="event_erstellen" Id="{84e9d7a6-3a39-48d5-8e25-b4781b9bf70a}">
      <Declaration><![CDATA[METHOD event_erstellen
VAR_INPUT
END_VAR
VAR_INST
  sut: EventTestsystem;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('event_erstellen');

sut.event.message := 'Test';
AssertEquals_STRING('Test', sut.event.message, 'Event not properly created');

TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <Method Name="file_logger_testen" Id="{21fea1f4-e348-4ccc-a848-51272e2d54b0}">
      <Declaration><![CDATA[METHOD file_logger_testen
VAR_INPUT
END_VAR
VAR_INST
  sut: EventTestsystem;
  file_logger: FileLogger;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('file_logger_testen');

file_logger.path := 'c:\';
sut.runner.add_logger(file_logger);
sut.event.message := 'Test';
sut.event.alarm();

sut.runner.save_logger(execute:=TRUE);

IF sut.runner.saving_logger_done() THEN
  TEST_FINISHED();
END_IF]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>